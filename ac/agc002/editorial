If you do the binary search for Q pairs of brothers independently, you repeat exactly the same sequence of operations ”add edges 1, 2, . . . , M to the graph in this order” O(Q log M) times and it looks inefficient. We want to perform the binary search for Q pairs of brothers in parallel. That is, you can repeat the sequence of operations O(log M) times and count the number of vertices visited by each pair of brothers at appropriate time. This ”appropriate time” can be determined using the results of former binary search. 
This way the algorithm works in O((M + Q) log M) time.
